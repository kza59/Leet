class Solution {
public:
    int minChanges(int n, int k) {
        int count = 0;
        if(n % 2 == 0) {
            if(k % 2) return -1;
        }
        if((n & k)  == 0) return -1;
        if((n & k)  != k) return -1;

        if((k ^ n) > n) return -1;
        if(n == k) return 0;
        //must change n to k. 
        if(n < k) return -1;
        for(int i{0};i<32;++i) {
            if(!((n & 0x1) == (k & 0x1))) {
                ++count;
            }
                n = n >> 1;
                k = k >> 1;
        }

        return count;
    }
};


//1110 //14
//1101 //13


//1010 //10
//0101 //5

//1010 //10
//1110 //14

//1101 //13
//0100 //4

//13 & 4 -> 0100 = 4


//0100 //4
//1101 //13

//1010 //10
//0111 //7

//0010 1100 //44
//0000 0010 //2

//0010 1010 //42
//0000 1110 //14
// 42 ^ 14 -> 0010 0100 = 36
// 42 & 14 -> 0000 1010 = 5
// 42 | 14 -> 0010 1110 = 46

//0011 0100 //52
//0000 1110 //14 
// 52 ^ 14 -> 0011 1010 = 58
// 52 & 14 -> 0000 0100 = 4
// 52 | 14 -> 0011 1110 = 62

